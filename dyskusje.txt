Tu będziemy przeprowadzać dyskuje i omawiać nasz projekt. 




29.05.2018 - raport z dotychczasowych dyskusji

Na początku padł pomysł zrobienia 3 list z pozycjami a/b/c (jedna lista pod drugą - tworząc planszę 3x3)
Gracze wybieraliby listę i pozycję oraz zmieniali jej wartość na X/O. 

Następnie wpadliśmy na lepszy pomysł - w tkinter zrobimy okienko gry, w którym znajdują się kwadratowe buttony 3x3, layout podobny do klasycznego sapera.
Po naciśnięciu na guzik, zmienia on wartość na X/O lub puste pole.

Okno będzie mieć również menu z funkcjami typu zamknij, nowy, pomoc, autorzy. 

Wywiązała się jeszcze dyskusja na temat grania przeciwko komputerowi, ale uznaliśmy, że robimy grę multiplayer.


Zuza rozpoczęła projekt i zrobiła od siebie bardzo dużo. Od wyglądu okienka, poprzez wyskakujące wiadomości, aż po stworzenie buttonów
oraz zapoczątkowanie zmieniania wartości na X/O lub puste pole. To jej udało się rozwiązać zaistniały problem, który zauważyła Maja,
że guziki były od siebie zależne. 

Maja dodała od siebie informacje pojawiające się w okienku O aplikacji, a także podjęła nieudaną próbę poskromienia buttonów. 

Z tego, co udało nam się zrobić wysnuliśmy następne wnioski - że potrzebujemy jeszcze kasowania buttonów, stworzenia warunków wygranej, przegranej oraz remisu,
a także dopracowanie funkcji nowy oraz cofnij. Zuza zauważyła, że aby stworzyć odpowiednie warunki, należy wskazać na aktywność buttonów. Maja znalazła odpowiadające
za to parametry active oraz destroy.




31.05.2018 - ułożenie myśli, obecnych problemów i planów

Zuza: póki co, nasze kółko i krzyżyk działa tak, że za naciśnięciem buttona, na wierzchu pojawia się nowy. Mając na uwadze potencjał stworzenia nieskończonej ilości buttonów w ten sposób (i spowolnienia pracy komputera), musimy znaleźć komendę, która usuwa użyty button. 
Gdy znajdzie się taka komenda (pokombinować z "button.destroy"?), należy ją wkleić do każdego defa, którzy tworzy nowy button. W ten sposób, po naciśnięciu buttona automatycznie się on usuwa i wkleja nowego buttona na swoje miejsce. Zalecam stworzenie osobnej aplikacji z 2 buttonami obok siebie i testowanie kodu tak, aby lewy buttun usunął prawy.

Problemem jest jeszcze ustawienie tekstu w okienku Pomoc/O Aplikacji na samym środku. Póki co, umiemy tylko ustawić tekst w TOP/BOTTOM/LEFT/RIGHT. 

Stworzenie skryptu do opcji "Nowy" powinno być bardzo łatwe. 
Stworzenie skryptu do "Cofnij" może być trochę trudniejsze.

Wyskakujące powiadomienie o zakończonej grze może być napisane za pomocą warunków IF. Na przykład: IF bttnx AND bttn2x AND bttn3x are ACTIVE (lub EXIST? nie wiem), to wyskakuje Toplevel w tkinter z wiadomością, że X wygrały (po czym uruchamia się "Nowy"). Wyżej wymienione buttony odpowiadają za pierwsze trzy górne pola ze znakiem X.

UPDATE: ogarnęłam, że przecież można wycentrować tekst za pomocą \n. Tylko to trochę słabe, ale jest.




01.06.2018

Maja: Za pomysłem Zuzy stworzyłam pierwszy warunek IF dotyczący wygranej. Udało mi się również znaleźć parametry odpowiadające za
aktywność guzików. Po przeprowadzonych testach okazało się, że wartość disabled wyłącza możliwość zmiany treści guzika (jeśli zrezygnowaliśmy z X i ustawiliśmy O, nie ma możliwości powrotu do X). Minusem tego jest to, że pola pozostałe z X wciąż działają,
a co za tym idzie, treść warunku, jeśli chodzi o X, nie zadziała, gdyż jest ona równa wartości disabled.

Poza tym należałoby poprawić warunek tak, by aplikacja wiedziała, że w momencie pojawienia się 3 tych samych znaków w linii, powinna automatycznie wyrzucić okienko informujące, nawet jeśli nie wszystkie pola zostały wypełnione. 

Wydaje mi się, że gdybyśmy chcieli zostać przy korzystaniu ze state='disabled' w stosunku do buttonów, można by spróbować przeistoczyć command w przypadku bttnO oraz usunąć definicje bttn.


4.06.2018

Zuza: Zgodnie z tym co Maja napisała, doszłam do pewnych wniosków. Przede wszystkim, nasza gra działa tak, że najpierw stawiasz X, a potem dopiero O. (jeden gracz klika dwa razy). Niestety oznacza to, że jeżeli gracz O chce zablokować pewne zwycięstwo gracza X, najpierw musi postawić w swoim miejscu znak X, a program od razu to przeczyta jako wygrana dla X. 

Dlatego o ile podoba mi się opcja z 'disabled' dla weryfikowania zwyciestwa warunkami IF, musielibyśmy znaleźć rozwiązanie odnośnie stawiania znaków - inaczej warunki zwycięstwa będą działały za wcześnie. Np. gdyby O były stawiane klikaniem prawym przyciskiem myszy, albo gdyby najpierw stawiało się X, a potem O (naprzemiennie). 

Myślę, że na tym poziomie kodu już ciężko byłoby na to wpłynąć. Jeśli chcemy uratować warunki wygranej i przegranej, moglibyśmy dodać do warunku, że dana sekwencja musi istnieć przez conajmniej 2-3 sekundy (aby dać czas na zmienienie X na O dla drugiego gracza).



Maja: Po drobnych ustaleniach i przemyśleniach doszliśmy do wniosku, że najlepiej bedzie zrezygnować z 'disabled', które lepiej by działało, gdyby nasze buttony działały inaczej.
Ze względu na zbliżający się termin postanowiliśmy już nie kombinować i nie tworzyć wszystkiego od podstaw. Pozostało nam więc:

Poprawa skryptu "Nowy" - dostosowanie zakończenia main(), aby nie pojawiało się dodatkowe, puste okno.
Stworzenie skryptu do "Cofnij", może być trochę trudniejsze.
Kasowanie buttonów za naciśnięciem buttona.